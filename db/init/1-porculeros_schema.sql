-- MySQL Script generated by MySQL Workbench
-- vie 03 nov 2023 18:42:00
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema backend_jon
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema backend_jon
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `backend_jon` ;
USE `backend_jon` ;

-- -----------------------------------------------------
-- Table `backend_jon`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `backend_jon`.`usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `primer_apellido` VARCHAR(45) NOT NULL,
  `segundo_apellido` VARCHAR(45) NULL,
  `email` VARCHAR(45) NOT NULL,
  `role` INT UNSIGNED NULL,
  `password` VARCHAR(100) NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `idAlumnos_UNIQUE` (`id_usuario` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `backend_jon`.`grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `backend_jon`.`grupo` (
  `id_grupo` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `id_admin` INT NOT NULL,
  PRIMARY KEY (`id_grupo`),
  INDEX `fk_Cursos_Usuarios1_idx` (`id_admin` ASC) VISIBLE,
  CONSTRAINT `fk_Cursos_Usuarios1`
    FOREIGN KEY (`id_admin`)
    REFERENCES `backend_jon`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `backend_jon`.`eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `backend_jon`.`eventos` (
  `id_evento` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(150) NOT NULL,
  `id_usuario` INT NOT NULL,
  `id_grupo` INT NOT NULL,
  `fecha` DATE NULL,
  PRIMARY KEY (`id_evento`),
  INDEX `fk_Notas_Usuarios_idx` (`id_usuario` ASC) VISIBLE,
  INDEX `fk_Notas_Cursos1_idx` (`id_grupo` ASC) VISIBLE,
  CONSTRAINT `fk_Notas_Usuarios`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `backend_jon`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notas_Cursos1`
    FOREIGN KEY (`id_grupo`)
    REFERENCES `backend_jon`.`grupo` (`id_grupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `backend_jon`.`participantes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `backend_jon`.`participantes` (
  `id_usuario` INT NOT NULL,
  `id_grupo` INT NOT NULL,
  PRIMARY KEY (`id_usuario`, `id_grupo`),
  INDEX `fk_Usuarios_has_Cursos_Cursos1_idx` (`id_grupo` ASC) VISIBLE,
  INDEX `fk_Usuarios_has_Cursos_Usuarios1_idx` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_Usuarios_has_Cursos_Usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `backend_jon`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuarios_has_Cursos_Cursos1`
    FOREIGN KEY (`id_grupo`)
    REFERENCES `backend_jon`.`grupo` (`id_grupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
